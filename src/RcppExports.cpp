// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// mat_pre
Rcpp::List mat_pre(arma::imat& dat);
RcppExport SEXP _dexterMML_mat_pre(SEXP datSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::imat& >::type dat(datSEXP);
    rcpp_result_gen = Rcpp::wrap(mat_pre(dat));
    return rcpp_result_gen;
END_RCPP
}
// prox_dich
Rcpp::List prox_dich(const arma::ivec& isum, const arma::ivec& psum, const arma::ivec& inp, const arma::ivec& pni, const arma::ivec& icnp, const arma::ivec& pcni, const arma::ivec& ip, const arma::ivec& pi, const int max_iter, const double min_change);
RcppExport SEXP _dexterMML_prox_dich(SEXP isumSEXP, SEXP psumSEXP, SEXP inpSEXP, SEXP pniSEXP, SEXP icnpSEXP, SEXP pcniSEXP, SEXP ipSEXP, SEXP piSEXP, SEXP max_iterSEXP, SEXP min_changeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::ivec& >::type isum(isumSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type psum(psumSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type inp(inpSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type pni(pniSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type icnp(icnpSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type pcni(pcniSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type ip(ipSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type pi(piSEXP);
    Rcpp::traits::input_parameter< const int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< const double >::type min_change(min_changeSEXP);
    rcpp_result_gen = Rcpp::wrap(prox_dich(isum, psum, inp, pni, icnp, pcni, ip, pi, max_iter, min_change));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_dexterMML_mat_pre", (DL_FUNC) &_dexterMML_mat_pre, 1},
    {"_dexterMML_prox_dich", (DL_FUNC) &_dexterMML_prox_dich, 10},
    {NULL, NULL, 0}
};

RcppExport void R_init_dexterMML(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
